# Namespace para todo
apiVersion:             v1
kind:                   Namespace
metadata:
    name:               wp-ivan
---
apiVersion: v1
kind:       PersistentVolumeClaim
metadata:
    name:   pvc-wp
    namespace: wp-ivan
spec:
    resources:
        requests: 
            storage: 1Gi
    accessModes:
        - ReadWriteOnce
---
apiVersion:     v1
kind:           ConfigMap

metadata:
    name:       datos-bbdd
    namespace:  wp-ivan

data:
    nombre: miwp
---
apiVersion:     v1
kind:           Secret

metadata:
    name:       datos-secretos-bbdd
    namespace:  wp-ivan

data:
    password:       bWlwYXNzd29yZA== # echo -n 'mipassword' | base64                                                          
    root-password:  bWlwYXNzd29yZA== # echo -n 'mipassword' | base64                                                          
    user:           bWl1c3Vhcmlv #echo -n 'miusuario' | base64                                                           
---
# Deployment WP
apiVersion:             apps/v1
kind:                   Deployment
metadata:
    name:               wp
    namespace:          wp-ivan
spec:
    replicas:           1
    selector:
        matchLabels:
            app:        wp ### REFERENCIA A (1)
    template:
        metadata:
            name:       wp-pod-template
            labels:
                app:    wp  # (1)
        spec:
            nodeSelector:
                nodo: ivan
            volumes:
                - name: datos-persistentes
                  persistentVolumeClaim:
                    claimName: pvc-wp
            containers:
                - name:         wp
                  image:        wordpress:6.4 # La ultima 6.4, con su apache ready to go!
                  volumeMounts:
                    - name:      datos-persistentes
                      mountPath: /var/www/html
                  env:
                    - name:     WORDPRESS_DB_HOST
                      value:    mariadb-service:3307
                    - name:     WORDPRESS_DB_USER
                      valueFrom:        
                        secretKeyRef:
                            name:   datos-secretos-bbdd
                            key:    user
                    - name:     WORDPRESS_DB_PASSWORD
                      valueFrom:        
                        secretKeyRef:
                            name:   datos-secretos-bbdd
                            key:    password
                    - name:     WORDPRESS_DB_NAME
                      valueFrom:        
                        configMapKeyRef:
                            name:   datos-bbdd
                            key:    nombre
---
# Deployment MariaDB
apiVersion:             apps/v1
kind:                   StatefulSet
metadata:
    name:               mariadb
    namespace:          wp-ivan
spec:
    serviceName:        mariadb-service # Esto es obligatorio
                        # Si alguien ataca a: mariadb-service:3307, a donde va? quién contesta?
                        # Alguno de las replicas (pods) de este statefulset... tenemos balanceo.. ESO ES LO QUE DA UN SERVICIO
                        # Pero en un statefulset, además, tenemos a nuestra disposición:
                        #   mariadb-0.mariadb-service:3306
                        #   mariadb-1.mariadb-service:3306
                        #   mariadb-2.mariadb-service:3306
                        #   mariadb-3.mariadb-service:3306
                        
                        # Es el sufijo que pondré a los nombres de pods, para dar de alta en el DNS de kubernetes un nombre que apunté a la IP de POD.
    
    replicas:           1 # Kubernetes va a generar tantas replicas de esta plantilla como le pongamos aquí... o luego escalemos.
                        # En los deplyments, cómo son los nombres de los pods que se generan?
                            # Con una componente aleatoria.
                        # En los statefulset, los nombres de los pods son secuenciales:
                        #   mariadb-0
                        #   mariadb-1
                        #   mariadb-2
                        #   mariadb-3
                        # Esto es importantísimo. Permite:
                        # - que kubernetes identifique qué pod se ha caido o es necesario mover a otro host.
                        #   para así poder pincharle las mismas pvcs que al que reemplaza... LOS MISMOS DATOS
                        # - que NOSOTROS humanos, podamos atacar (configurar) a un pod concreto.... porque son diferentes entre si... y hay casos donde no es igual atacar a uno u a otro.
                        
    selector:
        matchLabels:
            app:        mariadb 
    template:
        metadata:
            name:       mariadb-pod-template
            labels:
                app:    mariadb 
        spec:
            nodeSelector:
                nodo: ivan
            containers:
                - name:         mariadb
                  image:        mariadb:11.2
                  env:
                    - name:     MARIADB_ROOT_PASSWORD
                      valueFrom:        
                        secretKeyRef:
                            name:   datos-secretos-bbdd
                            key:    root-password
                    - name:     MARIADB_USER
                      valueFrom:        
                        secretKeyRef:
                            name:   datos-secretos-bbdd
                            key:    user
                    - name:     MARIADB_PASSWORD
                      valueFrom:        
                        secretKeyRef:
                            name:   datos-secretos-bbdd
                            key:    password
                    - name:     MARIADB_DATABASE
                      valueFrom:        
                        configMapKeyRef:
                            name:   datos-bbdd
                            key:    nombre
                  volumeMounts:
                    - name:      pvc-mariadb #datos-persistentes
                      mountPath: /var/lib/mysql
            #volumes: # Se hace en automático la asignación a cada pod de su pvc, generado desde la plantilla
            #    - name: datos-persistentes
            #      persistentVolumeClaim:
            #        claimName: pvc-mariadb
    volumeClaimTemplates: # Definimos las plantillas de las pvc que necesitarán esos pods.
                          # Para cada pod creado desde esta plantilla definida dentro del statefulset
                          # kubernetes creará un pvc de cada plantilla de pvc que defina aquí
        -   metadata:
                name:   pvc-mariadb
            spec:
                resources:
                    requests: 
                        storage: 1Gi
                accessModes:
                    - ReadWriteOnce
---
apiVersion:         v1
kind:               Service

metadata:
    name:           mariadb-service # Este es el nombre que se añade al DNS de kubernetes
    namespace:      wp-ivan

spec:
    type:               ClusterIP # Es el tipo por defecto... si a un servicio no le pongo tipo, es de tipo ClusterIP
    ports:
        - port:         3307 # Es el puerto de la IP del servicio
          targetPort:   3306 # De los contenedores que ofrecen el servicio
    selector:
        app:            mariadb     # Pon detras de la IP del servicio en NETFILTER a todos los pods que 
                                    # tengan esta etiqueta en el ns en el que se define este servicio
---
apiVersion:         v1
kind:               Service

metadata:
    name:           wp-service # Este es el nombre que se añade al DNS de kubernetes
    namespace:      wp-ivan

spec:
    type:               NodePort # Es el tipo por defecto... si a un servicio no le pongo tipo, es de tipo ClusterIP
    ports:
        - port:         8080  # Es el puerto de la IP del servicio
          targetPort:   80    # De los contenedores que ofrecen el servicio
          nodePort:     30001 # El de los nodos.
                                # ^^^ ESTO es lo que docker hace con el -p... pero docker la hace en 1 sola máquina
                                # Kubernetes en todas las del cluster
    selector:
        app:            wp     # Pon detras de la IP del servicio en NETFILTER a todos los pods que 
                                    # tengan esta etiqueta en el ns en el que se define este servicio                                    
---
apiVersion:         networking.k8s.io/v1
kind:               Ingress

metadata:
    name:           wp-ingress  
    namespace:      wp-ivan

spec:
    ingressClassName:   nginx # El ingress controller al que se le debe aplicar esta regla
    rules:
        - host: miweb.miempresa.com # Cuando alguien llame al nginx usando: http://miweb.miempresa.com/ => wp-service:8080
          http:
            paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                        name: wp-service
                        port:
                            number: 8080